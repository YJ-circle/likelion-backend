# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Deployment

on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Build with Gradle
      run: ./gradlew clean build

  send-jar:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Send jar to remote server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          source: "build/libs/likelion-backend-0.0.1-SNAPSHOT.jar"
          target: "/home/${{ secrets.SERVER_USERNAME }}/deploy"
          password: ${{ secrets.SERVER_PASSWORD }}

  run-app:
    needs: send-jar
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Move deploy.sh
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          source: "deploy.sh"
          target: "/home/${{ secrets.SERVER_USERNAME }}"
          key: ${{ secrets.PRIVATE_KEY }}
      - name: Execute script
        uses: appleboy/ssh-action@master
        with:
          username: ${{ secrets.SERVER_USERNAME }}
          host: ${{ secrets.SERVER_HOST }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: cd /home/${{ secrets.SERVER_USERNAME }}/deploy && chmod +x deploy.sh && ./deploy.sh
